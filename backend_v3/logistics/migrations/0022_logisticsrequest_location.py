# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-06-15 13:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


# noinspection PyPep8Naming
def populate_request_locations(apps, scheme_editor):
	Location = apps.get_model('warehouse.Location')
	Specification = apps.get_model('project_specifications.Specification')
	LogisticsRequest = apps.get_model('logistics.LogisticsRequest')
	User = apps.get_model('users.User')
	for request in LogisticsRequest.objects.all():
		spec_id = request.object_id
		reason = Specification.objects.select_related('project').get(id=spec_id)
		name = '{:05d} - {}'.format(reason.project.number, reason.pressmark)
		# TODO: Придумать какой-нибудь способ идентификации завскладом без необходимости завязки на конкретный ID
		location = Location.objects.create(name='Склад {}'.format(name),
		                                   project=reason.project,
		                                   responsible=User.objects.get(id=120))
		request.location = location
		request.save()


class Migration(migrations.Migration):
	dependencies = [
		('warehouse', '0039_auto_20180609_1515'),
		('logistics', '0021_logisticstask_name'),
	]

	operations = [
		migrations.AddField(
			model_name='logisticsrequest',
			name='location',
			field=models.ForeignKey(null=True, default=None, on_delete=django.db.models.deletion.CASCADE,
			                        to='warehouse.Location', verbose_name='Склад для заявки'),
			preserve_default=False,
		),
		migrations.RunPython(
			populate_request_locations
		),
		migrations.AlterField(
			model_name='logisticsrequest',
			name='location',
			field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.Location',
			                        verbose_name='Склад для заявки'),
		),
	]
