# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-04-16 09:21
from __future__ import unicode_literals

from django.db import migrations, models
from django.db import connection


def move_specification(apps, scheme_editor):
	NewGOST = apps.get_model('project_specifications', 'GOST')
	OldGOST = apps.get_model('warehouse', 'GOST')

	NewSpecification = apps.get_model('project_specifications', 'Specification')
	OldSpecification = apps.get_model('warehouse', 'Specification')

	NewSpecificationsPositions = apps.get_model('project_specifications', 'SpecificationsPositions')
	OldSpecificationsPositions = apps.get_model('warehouse', 'SpecificationsPositions')
	max_id = 0

	for data in OldGOST.objects.all():
		if data.id > max_id:
			max_id = data.id
		gost = NewGOST.objects.create(id=data.id, name=data.name)
		gost.save()

	cursor = connection.cursor()
	cursor.execute("SELECT setval(%s, %s, True);", ['project_specifications_gost_id_seq', max_id+1])
	cursor.fetchall()
	cursor.close()
	max_id = 0

	for data in OldSpecification.objects.all():
		if data.id > max_id:
			max_id = data.id
		specification = NewSpecification.objects.create(id=data.id, pressmark=data.pressmark,
		                                                object_name=data.object_name, section_name=data.section_name,
		                                                organization=data.organization, document_name=data.document_name,
		                                                state=data.state, workers_data=data.workers_data,
		                                                dates=data.dates, project_id=data.project_id,
		                                                user_created_id=data.user_created_id)
		specification.save()

	cursor = connection.cursor()
	cursor.execute("SELECT setval(%s, %s, True);", ['project_specifications_specification_id_seq', max_id+1])
	cursor.fetchall()
	cursor.close()
	max_id = 0

	for data in OldSpecificationsPositions.objects.all():
		if data.id > max_id:
			max_id = data.id
		specifications_positions = NewSpecificationsPositions.objects.create(id=data.id, good_kind=data.good_kind,
		                                                                     description_info=data.description_info,
		                                                                     unit=data.unit,
		                                                                     specification_id=data.specification_id,
		                                                                     positional_designation=data.positional_designation,
		                                                                     count=data.count,
		                                                                     position_in_table=data.position_in_table,
		                                                                     grouping_name=data.grouping_name)
		specifications_positions.save()
	cursor = connection.cursor()
	cursor.execute("SELECT setval(%s, %s, True);", ['project_specifications_specificationspositions_id_seq', max_id+1])
	cursor.fetchall()
	cursor.close()


class Migration(migrations.Migration):
	dependencies = [
		('warehouse', '0032_auto_20180411_1213'),
		('project_specifications', '0001_initial'),
	]

	operations = [
		migrations.RunPython(
			move_specification
		),
		migrations.DeleteModel(
			name='GOST',
		),
		migrations.RemoveField(
			model_name='specification',
			name='editors',
		),
		migrations.RemoveField(
			model_name='specification',
			name='project',
		),
		migrations.RemoveField(
			model_name='specification',
			name='user_created',
		),
		migrations.RemoveField(
			model_name='specificationspositions',
			name='good_kind',
		),
		migrations.RemoveField(
			model_name='specificationspositions',
			name='specification',
		),
		migrations.RemoveField(
			model_name='specificationspositions',
			name='unit',
		),
		migrations.RemoveField(
			model_name='goodkind',
			name='gosts',
		),
		migrations.AddField(
			model_name='goodkind',
			name='gosts',
			field=models.ManyToManyField(blank=True, related_name='_goodkind_gosts_+', to='project_specifications.GOST',
			                             verbose_name='ГОСТы'),
		),
		migrations.DeleteModel(
			name='Specification',
		),
		migrations.DeleteModel(
			name='SpecificationsPositions',
		),
	]
